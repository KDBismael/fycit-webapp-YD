import { useState } from 'react';
import { IconChevronDown } from '@tabler/icons-react';
import { Group, Menu, UnstyledButton, Text } from '@mantine/core';
import classes from './CountryPicker.module.css';

const data = [
  { label: 'ðŸ‡ºðŸ‡¸ +1', value: '+1', flag: 'ðŸ‡ºðŸ‡¸', country: 'United States' },
  { label: 'ðŸ‡¨ðŸ‡¦ +1', value: '+1', flag: 'ðŸ‡¨ðŸ‡¦', country: 'Canada' },
  { label: 'ðŸ‡«ðŸ‡· +33', value: '+33', flag: 'ðŸ‡«ðŸ‡·', country: 'France' },
  { label: 'ðŸ‡¬ðŸ‡§ +44', value: '+44', flag: 'ðŸ‡¬ðŸ‡§', country: 'United Kingdom' },
  { label: 'ðŸ‡©ðŸ‡ª +49', value: '+49', flag: 'ðŸ‡©ðŸ‡ª', country: 'Germany' },
  { label: 'ðŸ‡®ðŸ‡¹ +39', value: '+39', flag: 'ðŸ‡®ðŸ‡¹', country: 'Italy' },
  { label: 'ðŸ‡ªðŸ‡¸ +34', value: '+34', flag: 'ðŸ‡ªðŸ‡¸', country: 'Spain' },
  { label: 'ðŸ‡¦ðŸ‡º +61', value: '+61', flag: 'ðŸ‡¦ðŸ‡º', country: 'Australia' },
  { label: 'ðŸ‡¯ðŸ‡µ +81', value: '+81', flag: 'ðŸ‡¯ðŸ‡µ', country: 'Japan' },
  { label: 'ðŸ‡§ðŸ‡· +55', value: '+55', flag: 'ðŸ‡§ðŸ‡·', country: 'Brazil' },
  { label: 'ðŸ‡®ðŸ‡³ +91', value: '+91', flag: 'ðŸ‡®ðŸ‡³', country: 'India' },
  { label: 'ðŸ‡¨ðŸ‡³ +86', value: '+86', flag: 'ðŸ‡¨ðŸ‡³', country: 'China' },
];

interface CountryPickerProps {
  value?: string;
  country?: string;
  onChange?: (value: string, country?: string) => void;
}

export function CountryPicker({ value = '+1', country, onChange }: CountryPickerProps) {
  const [opened, setOpened] = useState(false);
  const selected = data.find(item => item.value === value && (!country || item.country === country)) || data[0];

  const items = data.map((item) => (
    <Menu.Item
      leftSection={<Text size="sm">{item.flag}</Text>}
      onClick={() => onChange?.(item.value, item.country)}
      key={item.flag + item.country}
    >
      <Text size="sm" fw={500}>{item.value}</Text>
    </Menu.Item>
  ));

  return (
    <Menu
      onOpen={() => setOpened(true)}
      onClose={() => setOpened(false)}
      radius="md"
      width="target"
      withinPortal
      position="bottom"
    >
      <Menu.Target>
        <UnstyledButton className={classes.control} data-expanded={opened || undefined}>
          <Group gap="xs">
            <Text size="sm">{selected.flag}</Text>
            <Text size="sm" c="gray.6">{selected.value}</Text>
          </Group>
          <IconChevronDown size={16} className={classes.icon} stroke={1.5} />
        </UnstyledButton>
      </Menu.Target>
      <Menu.Dropdown>{items}</Menu.Dropdown>
    </Menu>
  );
}
